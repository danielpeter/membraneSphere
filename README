!=====================================================================
!
!       m e m b r a n e S p h e r e  1 . 1
!       --------------------------------------------------
!
!      Daniel Peter
!      ETH Zurich - Institute of Geophysics
!      (c) ETH July 2006
!
!      Free for non-commercial academic research ONLY.
!      This program is distributed WITHOUT ANY WARRANTY whatsoever.
!      
!=====================================================================
!
! Copyright July 2006, by the ETH Zurich.
!
! The software shall be used for scientific purposes only, excluding industrial or commercial 
! purposes.
!
! The software is furnished on an "as is" basis and the copyright holder in no way warrants 
! the software or any of its results and is in no way liable for any use made of the software.  
! The copyright holder disclaims all warranties, representations, and statements, express or 
! implied, statutory or otherwise, including, without limitation, any implied warranties of 
! merchantability or fitness for a particular purpose. In no event shall the copyright holder be 
! liable for any actual, direct, indirect, special, consequential, or incidental damages, however 
! caused, including, without limitation, any damages arising out of the use or operation of 
! the software, loss of use of the software, or damage of any sort to the user.
!
! If you use this code for your own research, please send an email
! to Daniel Peter <dpeter@erdw.ethz.ch> for information.
!
! Proper acknowledgement shall be made to the authors of the software in publications and 
! presentations resulting from the use of this software:
!
! Peter, D., C. Tape, L. Boschi and J. H. Woodhouse, 2007. Surface wave tomography: 
! global membrane waves and adjoint methods, Geophys. J. Int., , 171: p. 1098-1117.
!
! Tape, C. H., 2003. Waves on a Spherical Membrane, M.Sc. thesis, University of Oxford, U.K.


NOTES ON USING THE SPHERE PACKAGE

------------------------------------------------------------------------
parameters to change on different machines
------------------------------------------------------------------------

- codes are written in Fortran90, use the appropriate compiler flags
  in the Makefile by setting F90, FFLAGS, LDFLAGS
  
- in include/commonModules.f90 you have to choose precision (use single, 
  it'll do it), source parameters (see Carl Tape's thesis) and filter parameters.
  There are also a few others, but defaults should do it.

- in propagation/Parameter_Input choose the physical model (grid refinement level, 
  simulation times and wave type) and set the source/receiver geometry. 
  You can also place a scatterer and use a heterogeneous background phase 
  speed model


------------------------------------------------------------------------
main executables are in the folder propagation/
------------------------------------------------------------------------

propagation.f90  -  forward modeling of membrane waves

    The main program 'propagation' calculates a simulation of membrane waves 
    propagating over a sphere.

    It reads the main input file Parameter_Input. Other parameters can be set
    in the commonModules.f90 file.
    
    File output is the seismogram 
    (format: time/displacement, time in seconds),
    written in the data directory given in Parameter_Input. 
    
    For checking, it also outputs the used phase map 
    (format: longitude/latitude/phasespeed)
    and the phase speed squared at the vertices 
    (format: verticeID/phasespeedsquared).
    
    Visualization of the seismograms can be done with the GNUPLOT application.
    The scripts/ folder holds a bash-script for visualization of the
    phase map with GMT.
      

adjointMethod.f90  -  kernel construction by membrane waves

    The executable performs a simulation, where no scatterer is present, 
    and calculates the adjoint source.
    Then it makes a time-reversed simulation and computes the kernel values.
    
    It reads the main input file Parameter_Input. Other parameters can be set
    in the commonModules.f90 file.
    
    The kernel values are written to a file in the data directory given in Parameter_Input
    (format: longitude/latitude/kernelvalue/vertexID). 
    Kernel values are evaluated at the vertices of the spherical membrane grid only.
    The kernel-file name can be set in Parameter_Input as well. 

    To visualize the kernel, there are two bash-scripts in the scripts/ folder
    using GMT. These scripts gmtplot_2Dkernel.sh (plot as 2D map) and 
    gmtplot_3Dkernel.sh (plot in 3D perspective) interpolate the kernel file
    and output cross-sections at different longitudes as well.


timelag.f90  -  phase shift/time shift of two seismograms

    This utility program calculates the time lag between two seismograms.
    
    It reads only the input file Timelag_Input. Other parameters (especially
    the filter parameters) are taken from commonModules.f90.

    The time shift result is written to the console.

heterogeneousPhaseshift.f90 - synthetic phase-shift calculations

    This program outputs a synthetic database of phase-shift measurements
    for any heterogeneous input model.
    
    Given a source/station file specified in the Parameter_Input file, 
    it numerically calculates the phase shift
    for each particular setup, based on cross-correlations between a
    reference trace (PREM) and the synthetic trace for any heterogeneous
    background phase-velocity model.
    

------------------------------------------------------------------------
infos about the folders:
------------------------------------------------------------------------

- griddata/
    holds the data for the grid construction.
- include/ 
    contains source files for routines
- phasedata/ 
    has two examples of phase speed models which can be used for a heterogeneous 
    background earth in the membrane wave simulation
- propagation/ 
    the main executables propagation, timelag & adjointMethod are located therein


Note: Subroutines from "Numerical Recipes: The Art of Scientific Computing"
      by W. H. Press et al., Cambridge University Press, are used in
      numericalRecipes*.f90. The user must acquire an official
      Numerical Recipes license to run them.
